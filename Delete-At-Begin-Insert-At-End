# Delete at begin / insert at end 

class Node:

    def __init__(self,data):
        self.data=data
        self.next=None
        self.prev=None

class DoublyLinkedList:

    def __init__(self):
        self.head=None

    def iae(self,data):
        new_node=Node(data)
        if not self.head:
            self.head=new_node
            return
        temp=self.head
        while temp.next:
            temp=temp.next
        temp.next=new_node
        new_node.prev=temp

    def dab(self):
        if not self.head:
            print("Can't perform delete operation in empty list!....")
        print(f"Deleted: {self.head.data}")
        self.head=self.head.next
        if self.head:
            self.head.prev=None
            

    def display(self):
        temp=self.head
        print("Double LinkedList:")
        while temp:
            print(temp.data, end=" <--> ")
            temp=temp.next
        print("None")


dll=DoublyLinkedList()
n= int(input("Enter The No Of Elements to Insert At End: "))
for i in range(n):
    val=int(input(f"Enter the element {i+1}: "))
    dll.iae(val)

dll.display()

d=int(input("\n How many times you want to perform delete operation at begin: "))
for _ in range(d):
    dll.dab()
dll.display()



#Output:-

Enter The No Of Elements to Insert At End:  5
Enter the element 1:  11
Enter the element 2:  22
Enter the element 3:  33
Enter the element 4:  44
Enter the element 5:  55
Double LinkedList:
11 <--> 22 <--> 33 <--> 44 <--> 55 <--> None

 How many times you want to perform delete operation at begin:  2
Deleted: 11
Deleted: 22
Double LinkedList:
33 <--> 44 <--> 55 <--> None
